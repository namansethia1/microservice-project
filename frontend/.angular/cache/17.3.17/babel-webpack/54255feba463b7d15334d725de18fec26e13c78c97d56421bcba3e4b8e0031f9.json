{"ast":null,"code":"import { CommonModule } from '@angular/common';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../../services/task.service\";\nimport * as i2 from \"../../services/notification.service\";\nimport * as i3 from \"@angular/common\";\nfunction DashboardComponent_tr_68_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\")(4, \"span\", 25);\n    i0.ɵɵtext(5);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(6, \"td\")(7, \"span\", 25);\n    i0.ɵɵtext(8);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(9, \"td\");\n    i0.ɵɵtext(10);\n    i0.ɵɵpipe(11, \"date\");\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const task_r1 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(task_r1.title);\n    i0.ɵɵadvance(2);\n    i0.ɵɵclassMap(\"badge-\" + task_r1.priority.toLowerCase());\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate1(\" \", task_r1.priority, \" \");\n    i0.ɵɵadvance(2);\n    i0.ɵɵclassMap(\"status-\" + task_r1.status.toLowerCase());\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate1(\" \", task_r1.status, \" \");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind2(11, 8, task_r1.dueDate, \"short\"));\n  }\n}\nfunction DashboardComponent_div_75_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 26)(1, \"div\", 27);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"div\", 28);\n    i0.ɵɵtext(4);\n    i0.ɵɵpipe(5, \"date\");\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const notification_r2 = ctx.$implicit;\n    i0.ɵɵclassProp(\"notification-unread\", !notification_r2.isRead);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(notification_r2.message);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind2(5, 4, notification_r2.createdAt, \"short\"));\n  }\n}\nexport let DashboardComponent = /*#__PURE__*/(() => {\n  class DashboardComponent {\n    constructor(taskService, notificationService) {\n      this.taskService = taskService;\n      this.notificationService = notificationService;\n      this.totalTasks = 0;\n      this.pendingTasks = 0;\n      this.completedTasks = 0;\n      this.overdueTasks = 0;\n      this.recentTasks = [];\n      this.recentNotifications = [];\n    }\n    ngOnInit() {\n      this.loadDashboardData();\n    }\n    loadDashboardData() {\n      // Load tasks\n      this.taskService.getAllTasks().subscribe(tasks => {\n        this.totalTasks = tasks.length;\n        this.pendingTasks = tasks.filter(t => t.status === 'PENDING').length;\n        this.completedTasks = tasks.filter(t => t.status === 'COMPLETED').length;\n        this.recentTasks = tasks.slice(0, 5);\n      });\n      // Load overdue tasks\n      this.taskService.getOverdueTasks().subscribe(tasks => {\n        this.overdueTasks = tasks.length;\n      });\n      // Load notifications (mock user ID)\n      const userId = 1;\n      this.notificationService.getNotificationsByUserId(userId).subscribe(notifications => {\n        this.recentNotifications = notifications.slice(0, 5);\n      });\n    }\n    static {\n      this.ɵfac = function DashboardComponent_Factory(t) {\n        return new (t || DashboardComponent)(i0.ɵɵdirectiveInject(i1.TaskService), i0.ɵɵdirectiveInject(i2.NotificationService));\n      };\n    }\n    static {\n      this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n        type: DashboardComponent,\n        selectors: [[\"app-dashboard\"]],\n        standalone: true,\n        features: [i0.ɵɵStandaloneFeature],\n        decls: 76,\n        vars: 6,\n        consts: [[1, \"container-fluid\"], [1, \"mb-4\"], [1, \"row\", \"mb-4\"], [1, \"col-md-3\"], [1, \"card\", \"text-white\", \"bg-primary\"], [1, \"card-body\"], [1, \"d-flex\", \"justify-content-between\"], [1, \"card-text\"], [1, \"align-self-center\"], [1, \"fas\", \"fa-tasks\", \"fa-2x\"], [1, \"card\", \"text-white\", \"bg-warning\"], [1, \"fas\", \"fa-clock\", \"fa-2x\"], [1, \"card\", \"text-white\", \"bg-success\"], [1, \"fas\", \"fa-check-circle\", \"fa-2x\"], [1, \"card\", \"text-white\", \"bg-danger\"], [1, \"fas\", \"fa-exclamation-triangle\", \"fa-2x\"], [1, \"row\"], [1, \"col-md-8\"], [1, \"card\"], [1, \"card-header\"], [1, \"table-responsive\"], [1, \"table\", \"table-hover\"], [4, \"ngFor\", \"ngForOf\"], [1, \"col-md-4\"], [\"class\", \"notification-item\", 3, \"notification-unread\", 4, \"ngFor\", \"ngForOf\"], [1, \"badge\"], [1, \"notification-item\"], [1, \"small\"], [1, \"text-muted\", \"small\"]],\n        template: function DashboardComponent_Template(rf, ctx) {\n          if (rf & 1) {\n            i0.ɵɵelementStart(0, \"div\", 0)(1, \"h2\", 1);\n            i0.ɵɵtext(2, \"Dashboard\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(3, \"div\", 2)(4, \"div\", 3)(5, \"div\", 4)(6, \"div\", 5)(7, \"div\", 6)(8, \"div\")(9, \"h4\");\n            i0.ɵɵtext(10);\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(11, \"p\", 7);\n            i0.ɵɵtext(12, \"Total Tasks\");\n            i0.ɵɵelementEnd()();\n            i0.ɵɵelementStart(13, \"div\", 8);\n            i0.ɵɵelement(14, \"i\", 9);\n            i0.ɵɵelementEnd()()()()();\n            i0.ɵɵelementStart(15, \"div\", 3)(16, \"div\", 10)(17, \"div\", 5)(18, \"div\", 6)(19, \"div\")(20, \"h4\");\n            i0.ɵɵtext(21);\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(22, \"p\", 7);\n            i0.ɵɵtext(23, \"Pending Tasks\");\n            i0.ɵɵelementEnd()();\n            i0.ɵɵelementStart(24, \"div\", 8);\n            i0.ɵɵelement(25, \"i\", 11);\n            i0.ɵɵelementEnd()()()()();\n            i0.ɵɵelementStart(26, \"div\", 3)(27, \"div\", 12)(28, \"div\", 5)(29, \"div\", 6)(30, \"div\")(31, \"h4\");\n            i0.ɵɵtext(32);\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(33, \"p\", 7);\n            i0.ɵɵtext(34, \"Completed Tasks\");\n            i0.ɵɵelementEnd()();\n            i0.ɵɵelementStart(35, \"div\", 8);\n            i0.ɵɵelement(36, \"i\", 13);\n            i0.ɵɵelementEnd()()()()();\n            i0.ɵɵelementStart(37, \"div\", 3)(38, \"div\", 14)(39, \"div\", 5)(40, \"div\", 6)(41, \"div\")(42, \"h4\");\n            i0.ɵɵtext(43);\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(44, \"p\", 7);\n            i0.ɵɵtext(45, \"Overdue Tasks\");\n            i0.ɵɵelementEnd()();\n            i0.ɵɵelementStart(46, \"div\", 8);\n            i0.ɵɵelement(47, \"i\", 15);\n            i0.ɵɵelementEnd()()()()()();\n            i0.ɵɵelementStart(48, \"div\", 16)(49, \"div\", 17)(50, \"div\", 18)(51, \"div\", 19)(52, \"h5\");\n            i0.ɵɵtext(53, \"Recent Tasks\");\n            i0.ɵɵelementEnd()();\n            i0.ɵɵelementStart(54, \"div\", 5)(55, \"div\", 20)(56, \"table\", 21)(57, \"thead\")(58, \"tr\")(59, \"th\");\n            i0.ɵɵtext(60, \"Title\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(61, \"th\");\n            i0.ɵɵtext(62, \"Priority\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(63, \"th\");\n            i0.ɵɵtext(64, \"Status\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(65, \"th\");\n            i0.ɵɵtext(66, \"Due Date\");\n            i0.ɵɵelementEnd()()();\n            i0.ɵɵelementStart(67, \"tbody\");\n            i0.ɵɵtemplate(68, DashboardComponent_tr_68_Template, 12, 11, \"tr\", 22);\n            i0.ɵɵelementEnd()()()()()();\n            i0.ɵɵelementStart(69, \"div\", 23)(70, \"div\", 18)(71, \"div\", 19)(72, \"h5\");\n            i0.ɵɵtext(73, \"Recent Notifications\");\n            i0.ɵɵelementEnd()();\n            i0.ɵɵelementStart(74, \"div\", 5);\n            i0.ɵɵtemplate(75, DashboardComponent_div_75_Template, 6, 7, \"div\", 24);\n            i0.ɵɵelementEnd()()()()();\n          }\n          if (rf & 2) {\n            i0.ɵɵadvance(10);\n            i0.ɵɵtextInterpolate(ctx.totalTasks);\n            i0.ɵɵadvance(11);\n            i0.ɵɵtextInterpolate(ctx.pendingTasks);\n            i0.ɵɵadvance(11);\n            i0.ɵɵtextInterpolate(ctx.completedTasks);\n            i0.ɵɵadvance(11);\n            i0.ɵɵtextInterpolate(ctx.overdueTasks);\n            i0.ɵɵadvance(25);\n            i0.ɵɵproperty(\"ngForOf\", ctx.recentTasks);\n            i0.ɵɵadvance(7);\n            i0.ɵɵproperty(\"ngForOf\", ctx.recentNotifications);\n          }\n        },\n        dependencies: [CommonModule, i3.NgForOf, i3.DatePipe],\n        styles: [\".badge-low[_ngcontent-%COMP%]{background-color:#28a745}.badge-medium[_ngcontent-%COMP%]{background-color:#ffc107;color:#000}.badge-high[_ngcontent-%COMP%]{background-color:#fd7e14}.badge-urgent[_ngcontent-%COMP%]{background-color:#dc3545}\"]\n      });\n    }\n  }\n  return DashboardComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}