{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport let TaskService = /*#__PURE__*/(() => {\n  class TaskService {\n    constructor(http) {\n      this.http = http;\n      this.apiUrl = 'http://localhost:8082/api/tasks';\n    }\n    getAllTasks() {\n      return this.http.get(this.apiUrl);\n    }\n    getTaskById(id) {\n      return this.http.get(`${this.apiUrl}/${id}`);\n    }\n    getTasksByUserId(userId) {\n      return this.http.get(`${this.apiUrl}/user/${userId}`);\n    }\n    getTasksByAssignedTo(assignedTo) {\n      return this.http.get(`${this.apiUrl}/assigned/${assignedTo}`);\n    }\n    getTasksByStatus(status) {\n      return this.http.get(`${this.apiUrl}/status/${status}`);\n    }\n    getTasksByPriority(priority) {\n      return this.http.get(`${this.apiUrl}/priority/${priority}`);\n    }\n    getOverdueTasks() {\n      return this.http.get(`${this.apiUrl}/overdue`);\n    }\n    createTask(task) {\n      return this.http.post(this.apiUrl, task);\n    }\n    updateTask(id, task) {\n      return this.http.put(`${this.apiUrl}/${id}`, task);\n    }\n    deleteTask(id) {\n      return this.http.delete(`${this.apiUrl}/${id}`);\n    }\n    assignTask(taskId, assignedTo) {\n      return this.http.put(`${this.apiUrl}/${taskId}/assign/${assignedTo}`, {});\n    }\n    updateTaskStatus(taskId, status) {\n      return this.http.put(`${this.apiUrl}/${taskId}/status/${status}`, {});\n    }\n    static {\n      this.ɵfac = function TaskService_Factory(t) {\n        return new (t || TaskService)(i0.ɵɵinject(i1.HttpClient));\n      };\n    }\n    static {\n      this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n        token: TaskService,\n        factory: TaskService.ɵfac,\n        providedIn: 'root'\n      });\n    }\n  }\n  return TaskService;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}