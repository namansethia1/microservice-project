{"ast":null,"code":"import { CommonModule } from '@angular/common';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common\";\nfunction DashboardComponent_div_44_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 15);\n    i0.ɵɵtext(1, \"No tasks found\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction DashboardComponent_div_45_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 16)(1, \"div\", 17)(2, \"strong\");\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"span\", 18);\n    i0.ɵɵtext(5);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(6, \"small\", 15);\n    i0.ɵɵtext(7);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(8, \"div\", 19)(9, \"small\", 18);\n    i0.ɵɵtext(10);\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const task_r1 = ctx.$implicit;\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(task_r1.title);\n    i0.ɵɵadvance();\n    i0.ɵɵclassMap(\"bg-\" + ctx_r1.getPriorityColor(task_r1.priority));\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate(task_r1.priority);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(task_r1.description);\n    i0.ɵɵadvance(2);\n    i0.ɵɵclassMap(\"bg-\" + ctx_r1.getStatusColor(task_r1.status));\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate(task_r1.status);\n  }\n}\nexport class DashboardComponent {\n  constructor() {\n    this.userCount = 5;\n    this.taskCount = 12;\n    this.notificationCount = 8;\n    this.tasks = [{\n      title: 'Sample Task 1',\n      description: 'This is a sample task',\n      priority: 'HIGH',\n      status: 'IN_PROGRESS'\n    }, {\n      title: 'Sample Task 2',\n      description: 'Another sample task',\n      priority: 'MEDIUM',\n      status: 'PENDING'\n    }];\n  }\n  ngOnInit() {\n    console.log('Dashboard component initialized successfully!');\n  }\n  getPriorityColor(priority) {\n    switch (priority) {\n      case 'HIGH':\n        return 'danger';\n      case 'MEDIUM':\n        return 'warning';\n      case 'LOW':\n        return 'success';\n      case 'URGENT':\n        return 'danger';\n      default:\n        return 'secondary';\n    }\n  }\n  getStatusColor(status) {\n    switch (status) {\n      case 'COMPLETED':\n        return 'success';\n      case 'IN_PROGRESS':\n        return 'primary';\n      case 'PENDING':\n        return 'warning';\n      case 'CANCELLED':\n        return 'danger';\n      default:\n        return 'secondary';\n    }\n  }\n  static {\n    this.ɵfac = function DashboardComponent_Factory(t) {\n      return new (t || DashboardComponent)();\n    };\n  }\n  static {\n    this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: DashboardComponent,\n      selectors: [[\"app-dashboard\"]],\n      standalone: true,\n      features: [i0.ɵɵStandaloneFeature],\n      decls: 46,\n      vars: 5,\n      consts: [[1, \"row\"], [1, \"col-md-3\"], [1, \"card\", \"text-white\", \"bg-primary\", \"mb-3\"], [1, \"card-header\"], [1, \"card-body\"], [1, \"card-title\"], [1, \"card-text\"], [1, \"card\", \"text-white\", \"bg-success\", \"mb-3\"], [1, \"card\", \"text-white\", \"bg-info\", \"mb-3\"], [1, \"card\", \"text-white\", \"bg-warning\", \"mb-3\"], [1, \"row\", \"mt-4\"], [1, \"col-md-12\"], [1, \"card\"], [\"class\", \"text-muted\", 4, \"ngIf\"], [\"class\", \"mb-2 border-bottom pb-2\", 4, \"ngFor\", \"ngForOf\"], [1, \"text-muted\"], [1, \"mb-2\", \"border-bottom\", \"pb-2\"], [1, \"d-flex\", \"justify-content-between\"], [1, \"badge\"], [1, \"mt-1\"]],\n      template: function DashboardComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2)(3, \"div\", 3);\n          i0.ɵɵtext(4, \"Users\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(5, \"div\", 4)(6, \"h4\", 5);\n          i0.ɵɵtext(7);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(8, \"p\", 6);\n          i0.ɵɵtext(9, \"Total Users\");\n          i0.ɵɵelementEnd()()()();\n          i0.ɵɵelementStart(10, \"div\", 1)(11, \"div\", 7)(12, \"div\", 3);\n          i0.ɵɵtext(13, \"Tasks\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(14, \"div\", 4)(15, \"h4\", 5);\n          i0.ɵɵtext(16);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(17, \"p\", 6);\n          i0.ɵɵtext(18, \"Total Tasks\");\n          i0.ɵɵelementEnd()()()();\n          i0.ɵɵelementStart(19, \"div\", 1)(20, \"div\", 8)(21, \"div\", 3);\n          i0.ɵɵtext(22, \"Notifications\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(23, \"div\", 4)(24, \"h4\", 5);\n          i0.ɵɵtext(25);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(26, \"p\", 6);\n          i0.ɵɵtext(27, \"Total Notifications\");\n          i0.ɵɵelementEnd()()()();\n          i0.ɵɵelementStart(28, \"div\", 1)(29, \"div\", 9)(30, \"div\", 3);\n          i0.ɵɵtext(31, \"Status\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(32, \"div\", 4)(33, \"h4\", 5);\n          i0.ɵɵtext(34, \"Active\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(35, \"p\", 6);\n          i0.ɵɵtext(36, \"All Services\");\n          i0.ɵɵelementEnd()()()()();\n          i0.ɵɵelementStart(37, \"div\", 10)(38, \"div\", 11)(39, \"div\", 12)(40, \"div\", 3)(41, \"h5\");\n          i0.ɵɵtext(42, \"Recent Tasks\");\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(43, \"div\", 4);\n          i0.ɵɵtemplate(44, DashboardComponent_div_44_Template, 2, 0, \"div\", 13)(45, DashboardComponent_div_45_Template, 11, 8, \"div\", 14);\n          i0.ɵɵelementEnd()()()();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(7);\n          i0.ɵɵtextInterpolate(ctx.userCount);\n          i0.ɵɵadvance(9);\n          i0.ɵɵtextInterpolate(ctx.taskCount);\n          i0.ɵɵadvance(9);\n          i0.ɵɵtextInterpolate(ctx.notificationCount);\n          i0.ɵɵadvance(19);\n          i0.ɵɵproperty(\"ngIf\", ctx.tasks.length === 0);\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"ngForOf\", ctx.tasks);\n        }\n      },\n      dependencies: [CommonModule, i1.NgForOf, i1.NgIf],\n      encapsulation: 2\n    });\n  }\n}","map":{"version":3,"names":["CommonModule","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵtextInterpolate","task_r1","title","ɵɵclassMap","ctx_r1","getPriorityColor","priority","description","getStatusColor","status","DashboardComponent","constructor","userCount","taskCount","notificationCount","tasks","ngOnInit","console","log","selectors","standalone","features","ɵɵStandaloneFeature","decls","vars","consts","template","DashboardComponent_Template","rf","ctx","ɵɵtemplate","DashboardComponent_div_44_Template","DashboardComponent_div_45_Template","ɵɵproperty","length","i1","NgForOf","NgIf","encapsulation"],"sources":["D:\\CIA3_MS\\frontend\\src\\app\\components\\dashboard.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\n@Component({\r\n  selector: 'app-dashboard',\r\n  standalone: true,\r\n  imports: [CommonModule],\r\n  template: `\r\n    <div class=\"row\">\r\n      <div class=\"col-md-3\">\r\n        <div class=\"card text-white bg-primary mb-3\">\r\n          <div class=\"card-header\">Users</div>\r\n          <div class=\"card-body\">\r\n            <h4 class=\"card-title\">{{userCount}}</h4>\r\n            <p class=\"card-text\">Total Users</p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div class=\"col-md-3\">\r\n        <div class=\"card text-white bg-success mb-3\">\r\n          <div class=\"card-header\">Tasks</div>\r\n          <div class=\"card-body\">\r\n            <h4 class=\"card-title\">{{taskCount}}</h4>\r\n            <p class=\"card-text\">Total Tasks</p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div class=\"col-md-3\">\r\n        <div class=\"card text-white bg-info mb-3\">\r\n          <div class=\"card-header\">Notifications</div>\r\n          <div class=\"card-body\">\r\n            <h4 class=\"card-title\">{{notificationCount}}</h4>\r\n            <p class=\"card-text\">Total Notifications</p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div class=\"col-md-3\">\r\n        <div class=\"card text-white bg-warning mb-3\">\r\n          <div class=\"card-header\">Status</div>\r\n          <div class=\"card-body\">\r\n            <h4 class=\"card-title\">Active</h4>\r\n            <p class=\"card-text\">All Services</p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    \r\n    <div class=\"row mt-4\">\r\n      <div class=\"col-md-12\">\r\n        <div class=\"card\">\r\n          <div class=\"card-header\">\r\n            <h5>Recent Tasks</h5>\r\n          </div>\r\n          <div class=\"card-body\">\r\n            <div *ngIf=\"tasks.length === 0\" class=\"text-muted\">No tasks found</div>\r\n            <div *ngFor=\"let task of tasks\" class=\"mb-2 border-bottom pb-2\">\r\n              <div class=\"d-flex justify-content-between\">\r\n                <strong>{{task.title}}</strong>\r\n                <span class=\"badge\" [class]=\"'bg-' + getPriorityColor(task.priority)\">{{task.priority}}</span>\r\n              </div>\r\n              <small class=\"text-muted\">{{task.description}}</small>\r\n              <div class=\"mt-1\">\r\n                <small class=\"badge\" [class]=\"'bg-' + getStatusColor(task.status)\">{{task.status}}</small>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  `\r\n})\r\nexport class DashboardComponent implements OnInit {\r\n  userCount = 5;\r\n  taskCount = 12;\r\n  notificationCount = 8;\r\n  tasks: any[] = [\r\n    { title: 'Sample Task 1', description: 'This is a sample task', priority: 'HIGH', status: 'IN_PROGRESS' },\r\n    { title: 'Sample Task 2', description: 'Another sample task', priority: 'MEDIUM', status: 'PENDING' }\r\n  ];\r\n\r\n  ngOnInit() {\r\n    console.log('Dashboard component initialized successfully!');\r\n  }\r\n\r\n  getPriorityColor(priority: string): string {\r\n    switch(priority) {\r\n      case 'HIGH': return 'danger';\r\n      case 'MEDIUM': return 'warning';\r\n      case 'LOW': return 'success';\r\n      case 'URGENT': return 'danger';\r\n      default: return 'secondary';\r\n    }\r\n  }\r\n\r\n  getStatusColor(status: string): string {\r\n    switch(status) {\r\n      case 'COMPLETED': return 'success';\r\n      case 'IN_PROGRESS': return 'primary';\r\n      case 'PENDING': return 'warning';\r\n      case 'CANCELLED': return 'danger';\r\n      default: return 'secondary';\r\n    }\r\n  }\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}