{"ast":null,"code":"import { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../services/task.service\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/forms\";\nfunction DashboardComponent_div_76_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 32);\n    i0.ɵɵtext(1, \"Task created successfully.\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction DashboardComponent_div_77_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 33);\n    i0.ɵɵtext(1, \"Failed to create task.\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction DashboardComponent_div_78_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 34);\n    i0.ɵɵtext(1, \"No tasks found\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction DashboardComponent_div_79_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 35)(1, \"div\", 36)(2, \"strong\");\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"span\", 37);\n    i0.ɵɵtext(5);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(6, \"small\", 34);\n    i0.ɵɵtext(7);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(8, \"div\", 38)(9, \"small\", 37);\n    i0.ɵɵtext(10);\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const task_r1 = ctx.$implicit;\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(task_r1.title);\n    i0.ɵɵadvance();\n    i0.ɵɵclassMap(\"bg-\" + ctx_r1.getPriorityColor(task_r1.priority));\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate(task_r1.priority);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(task_r1.description);\n    i0.ɵɵadvance(2);\n    i0.ɵɵclassMap(\"bg-\" + ctx_r1.getStatusColor(task_r1.status));\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate(task_r1.status);\n  }\n}\nexport class DashboardComponent {\n  constructor(taskService) {\n    this.taskService = taskService;\n    this.userCount = 5;\n    this.taskCount = 12;\n    this.notificationCount = 8;\n    this.tasks = [];\n    this.newTask = {\n      title: '',\n      description: '',\n      userId: 1,\n      priority: 'MEDIUM',\n      dueDate: ''\n    };\n    this.createSuccess = false;\n    this.createError = false;\n  }\n  ngOnInit() {\n    this.loadTasks();\n  }\n  loadTasks() {\n    this.taskService.getAllTasks().subscribe({\n      next: tasks => {\n        this.tasks = tasks;\n        this.taskCount = tasks.length;\n        this.userCount = new Set(tasks.map(t => t.userId)).size;\n      },\n      error: () => {\n        // fallback demo data if API down\n        this.tasks = [{\n          title: 'Sample Task 1',\n          description: 'This is a sample task',\n          priority: 'HIGH',\n          status: 'IN_PROGRESS'\n        }, {\n          title: 'Sample Task 2',\n          description: 'Another sample task',\n          priority: 'MEDIUM',\n          status: 'PENDING'\n        }];\n      }\n    });\n  }\n  createTask() {\n    const payload = {\n      title: this.newTask.title,\n      description: this.newTask.description,\n      userId: Number(this.newTask.userId),\n      priority: this.newTask.priority\n    };\n    if (this.newTask.dueDate) {\n      // Backend expects LocalDateTime (no timezone). Format as 'YYYY-MM-DDTHH:mm:ss'.\n      const d = new Date(this.newTask.dueDate);\n      const pad = n => String(n).padStart(2, '0');\n      payload.dueDate = `${d.getFullYear()}-${pad(d.getMonth() + 1)}-${pad(d.getDate())}` + `T${pad(d.getHours())}:${pad(d.getMinutes())}:${pad(d.getSeconds())}`;\n    }\n    this.taskService.createTask(payload).subscribe({\n      next: () => {\n        this.createSuccess = true;\n        this.createError = false;\n        this.newTask = {\n          title: '',\n          description: '',\n          userId: 1,\n          priority: 'MEDIUM',\n          dueDate: ''\n        };\n        this.loadTasks();\n        setTimeout(() => this.createSuccess = false, 2000);\n      },\n      error: () => {\n        this.createError = true;\n        setTimeout(() => this.createError = false, 2500);\n      }\n    });\n  }\n  getPriorityColor(priority) {\n    switch (priority) {\n      case 'HIGH':\n        return 'danger';\n      case 'MEDIUM':\n        return 'warning';\n      case 'LOW':\n        return 'success';\n      case 'URGENT':\n        return 'danger';\n      default:\n        return 'secondary';\n    }\n  }\n  getStatusColor(status) {\n    switch (status) {\n      case 'COMPLETED':\n        return 'success';\n      case 'IN_PROGRESS':\n        return 'primary';\n      case 'PENDING':\n        return 'warning';\n      case 'CANCELLED':\n        return 'danger';\n      default:\n        return 'secondary';\n    }\n  }\n  static {\n    this.ɵfac = function DashboardComponent_Factory(t) {\n      return new (t || DashboardComponent)(i0.ɵɵdirectiveInject(i1.TaskService));\n    };\n  }\n  static {\n    this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: DashboardComponent,\n      selectors: [[\"app-dashboard\"]],\n      standalone: true,\n      features: [i0.ɵɵStandaloneFeature],\n      decls: 80,\n      vars: 13,\n      consts: [[1, \"row\"], [1, \"col-md-3\"], [1, \"card\", \"text-white\", \"bg-primary\", \"mb-3\"], [1, \"card-header\"], [1, \"card-body\"], [1, \"card-title\"], [1, \"card-text\"], [1, \"card\", \"text-white\", \"bg-success\", \"mb-3\"], [1, \"card\", \"text-white\", \"bg-info\", \"mb-3\"], [1, \"card\", \"text-white\", \"bg-warning\", \"mb-3\"], [1, \"row\", \"mt-4\"], [1, \"col-md-12\"], [1, \"card\"], [1, \"row\", \"g-3\", \"mb-4\", 3, \"ngSubmit\"], [1, \"col-md-4\"], [1, \"form-label\"], [\"name\", \"title\", \"required\", \"\", 1, \"form-control\", 3, \"ngModelChange\", \"ngModel\"], [\"name\", \"description\", 1, \"form-control\", 3, \"ngModelChange\", \"ngModel\"], [1, \"col-md-2\"], [\"name\", \"priority\", 1, \"form-select\", 3, \"ngModelChange\", \"ngModel\"], [\"value\", \"LOW\"], [\"value\", \"MEDIUM\"], [\"value\", \"HIGH\"], [\"value\", \"URGENT\"], [\"type\", \"number\", \"name\", \"userId\", \"required\", \"\", 1, \"form-control\", 3, \"ngModelChange\", \"ngModel\"], [\"type\", \"datetime-local\", \"name\", \"dueDate\", 1, \"form-control\", 3, \"ngModelChange\", \"ngModel\"], [1, \"col-md-2\", \"align-self-end\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\", \"w-100\", 3, \"disabled\"], [\"class\", \"col-md-7 align-self-end text-success\", 4, \"ngIf\"], [\"class\", \"col-md-7 align-self-end text-danger\", 4, \"ngIf\"], [\"class\", \"text-muted\", 4, \"ngIf\"], [\"class\", \"mb-2 border-bottom pb-2\", 4, \"ngFor\", \"ngForOf\"], [1, \"col-md-7\", \"align-self-end\", \"text-success\"], [1, \"col-md-7\", \"align-self-end\", \"text-danger\"], [1, \"text-muted\"], [1, \"mb-2\", \"border-bottom\", \"pb-2\"], [1, \"d-flex\", \"justify-content-between\"], [1, \"badge\"], [1, \"mt-1\"]],\n      template: function DashboardComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2)(3, \"div\", 3);\n          i0.ɵɵtext(4, \"Users\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(5, \"div\", 4)(6, \"h4\", 5);\n          i0.ɵɵtext(7);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(8, \"p\", 6);\n          i0.ɵɵtext(9, \"Total Users\");\n          i0.ɵɵelementEnd()()()();\n          i0.ɵɵelementStart(10, \"div\", 1)(11, \"div\", 7)(12, \"div\", 3);\n          i0.ɵɵtext(13, \"Tasks\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(14, \"div\", 4)(15, \"h4\", 5);\n          i0.ɵɵtext(16);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(17, \"p\", 6);\n          i0.ɵɵtext(18, \"Total Tasks\");\n          i0.ɵɵelementEnd()()()();\n          i0.ɵɵelementStart(19, \"div\", 1)(20, \"div\", 8)(21, \"div\", 3);\n          i0.ɵɵtext(22, \"Notifications\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(23, \"div\", 4)(24, \"h4\", 5);\n          i0.ɵɵtext(25);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(26, \"p\", 6);\n          i0.ɵɵtext(27, \"Total Notifications\");\n          i0.ɵɵelementEnd()()()();\n          i0.ɵɵelementStart(28, \"div\", 1)(29, \"div\", 9)(30, \"div\", 3);\n          i0.ɵɵtext(31, \"Status\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(32, \"div\", 4)(33, \"h4\", 5);\n          i0.ɵɵtext(34, \"Active\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(35, \"p\", 6);\n          i0.ɵɵtext(36, \"All Services\");\n          i0.ɵɵelementEnd()()()()();\n          i0.ɵɵelementStart(37, \"div\", 10)(38, \"div\", 11)(39, \"div\", 12)(40, \"div\", 3)(41, \"h5\");\n          i0.ɵɵtext(42, \"Recent Tasks\");\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(43, \"div\", 4)(44, \"form\", 13);\n          i0.ɵɵlistener(\"ngSubmit\", function DashboardComponent_Template_form_ngSubmit_44_listener() {\n            return ctx.createTask();\n          });\n          i0.ɵɵelementStart(45, \"div\", 14)(46, \"label\", 15);\n          i0.ɵɵtext(47, \"Title\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(48, \"input\", 16);\n          i0.ɵɵtwoWayListener(\"ngModelChange\", function DashboardComponent_Template_input_ngModelChange_48_listener($event) {\n            i0.ɵɵtwoWayBindingSet(ctx.newTask.title, $event) || (ctx.newTask.title = $event);\n            return $event;\n          });\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(49, \"div\", 14)(50, \"label\", 15);\n          i0.ɵɵtext(51, \"Description\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(52, \"input\", 17);\n          i0.ɵɵtwoWayListener(\"ngModelChange\", function DashboardComponent_Template_input_ngModelChange_52_listener($event) {\n            i0.ɵɵtwoWayBindingSet(ctx.newTask.description, $event) || (ctx.newTask.description = $event);\n            return $event;\n          });\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(53, \"div\", 18)(54, \"label\", 15);\n          i0.ɵɵtext(55, \"Priority\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(56, \"select\", 19);\n          i0.ɵɵtwoWayListener(\"ngModelChange\", function DashboardComponent_Template_select_ngModelChange_56_listener($event) {\n            i0.ɵɵtwoWayBindingSet(ctx.newTask.priority, $event) || (ctx.newTask.priority = $event);\n            return $event;\n          });\n          i0.ɵɵelementStart(57, \"option\", 20);\n          i0.ɵɵtext(58, \"LOW\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(59, \"option\", 21);\n          i0.ɵɵtext(60, \"MEDIUM\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(61, \"option\", 22);\n          i0.ɵɵtext(62, \"HIGH\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(63, \"option\", 23);\n          i0.ɵɵtext(64, \"URGENT\");\n          i0.ɵɵelementEnd()()();\n          i0.ɵɵelementStart(65, \"div\", 18)(66, \"label\", 15);\n          i0.ɵɵtext(67, \"User ID\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(68, \"input\", 24);\n          i0.ɵɵtwoWayListener(\"ngModelChange\", function DashboardComponent_Template_input_ngModelChange_68_listener($event) {\n            i0.ɵɵtwoWayBindingSet(ctx.newTask.userId, $event) || (ctx.newTask.userId = $event);\n            return $event;\n          });\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(69, \"div\", 1)(70, \"label\", 15);\n          i0.ɵɵtext(71, \"Due Date\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(72, \"input\", 25);\n          i0.ɵɵtwoWayListener(\"ngModelChange\", function DashboardComponent_Template_input_ngModelChange_72_listener($event) {\n            i0.ɵɵtwoWayBindingSet(ctx.newTask.dueDate, $event) || (ctx.newTask.dueDate = $event);\n            return $event;\n          });\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(73, \"div\", 26)(74, \"button\", 27);\n          i0.ɵɵtext(75, \"Add Task\");\n          i0.ɵɵelementEnd()();\n          i0.ɵɵtemplate(76, DashboardComponent_div_76_Template, 2, 0, \"div\", 28)(77, DashboardComponent_div_77_Template, 2, 0, \"div\", 29);\n          i0.ɵɵelementEnd();\n          i0.ɵɵtemplate(78, DashboardComponent_div_78_Template, 2, 0, \"div\", 30)(79, DashboardComponent_div_79_Template, 11, 8, \"div\", 31);\n          i0.ɵɵelementEnd()()()();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(7);\n          i0.ɵɵtextInterpolate(ctx.userCount);\n          i0.ɵɵadvance(9);\n          i0.ɵɵtextInterpolate(ctx.taskCount);\n          i0.ɵɵadvance(9);\n          i0.ɵɵtextInterpolate(ctx.notificationCount);\n          i0.ɵɵadvance(23);\n          i0.ɵɵtwoWayProperty(\"ngModel\", ctx.newTask.title);\n          i0.ɵɵadvance(4);\n          i0.ɵɵtwoWayProperty(\"ngModel\", ctx.newTask.description);\n          i0.ɵɵadvance(4);\n          i0.ɵɵtwoWayProperty(\"ngModel\", ctx.newTask.priority);\n          i0.ɵɵadvance(12);\n          i0.ɵɵtwoWayProperty(\"ngModel\", ctx.newTask.userId);\n          i0.ɵɵadvance(4);\n          i0.ɵɵtwoWayProperty(\"ngModel\", ctx.newTask.dueDate);\n          i0.ɵɵadvance(2);\n          i0.ɵɵproperty(\"disabled\", !ctx.newTask.title || !ctx.newTask.userId);\n          i0.ɵɵadvance(2);\n          i0.ɵɵproperty(\"ngIf\", ctx.createSuccess);\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"ngIf\", ctx.createError);\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"ngIf\", ctx.tasks.length === 0);\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"ngForOf\", ctx.tasks);\n        }\n      },\n      dependencies: [CommonModule, i2.NgForOf, i2.NgIf, FormsModule, i3.ɵNgNoValidate, i3.NgSelectOption, i3.ɵNgSelectMultipleOption, i3.DefaultValueAccessor, i3.NumberValueAccessor, i3.SelectControlValueAccessor, i3.NgControlStatus, i3.NgControlStatusGroup, i3.RequiredValidator, i3.NgModel, i3.NgForm],\n      encapsulation: 2\n    });\n  }\n}","map":{"version":3,"names":["CommonModule","FormsModule","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵtextInterpolate","task_r1","title","ɵɵclassMap","ctx_r1","getPriorityColor","priority","description","getStatusColor","status","DashboardComponent","constructor","taskService","userCount","taskCount","notificationCount","tasks","newTask","userId","dueDate","createSuccess","createError","ngOnInit","loadTasks","getAllTasks","subscribe","next","length","Set","map","t","size","error","createTask","payload","Number","d","Date","pad","n","String","padStart","getFullYear","getMonth","getDate","getHours","getMinutes","getSeconds","setTimeout","ɵɵdirectiveInject","i1","TaskService","selectors","standalone","features","ɵɵStandaloneFeature","decls","vars","consts","template","DashboardComponent_Template","rf","ctx","ɵɵlistener","DashboardComponent_Template_form_ngSubmit_44_listener","ɵɵtwoWayListener","DashboardComponent_Template_input_ngModelChange_48_listener","$event","ɵɵtwoWayBindingSet","DashboardComponent_Template_input_ngModelChange_52_listener","DashboardComponent_Template_select_ngModelChange_56_listener","DashboardComponent_Template_input_ngModelChange_68_listener","DashboardComponent_Template_input_ngModelChange_72_listener","ɵɵtemplate","DashboardComponent_div_76_Template","DashboardComponent_div_77_Template","DashboardComponent_div_78_Template","DashboardComponent_div_79_Template","ɵɵtwoWayProperty","ɵɵproperty","i2","NgForOf","NgIf","i3","ɵNgNoValidate","NgSelectOption","ɵNgSelectMultipleOption","DefaultValueAccessor","NumberValueAccessor","SelectControlValueAccessor","NgControlStatus","NgControlStatusGroup","RequiredValidator","NgModel","NgForm","encapsulation"],"sources":["D:\\CIA3_MS\\frontend\\src\\app\\components\\dashboard.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { TaskService, Task } from '../services/task.service';\r\n\r\n@Component({\r\n  selector: 'app-dashboard',\r\n  standalone: true,\r\n  imports: [CommonModule, FormsModule],\r\n  template: `\r\n    <div class=\"row\">\r\n      <div class=\"col-md-3\">\r\n        <div class=\"card text-white bg-primary mb-3\">\r\n          <div class=\"card-header\">Users</div>\r\n          <div class=\"card-body\">\r\n            <h4 class=\"card-title\">{{userCount}}</h4>\r\n            <p class=\"card-text\">Total Users</p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div class=\"col-md-3\">\r\n        <div class=\"card text-white bg-success mb-3\">\r\n          <div class=\"card-header\">Tasks</div>\r\n          <div class=\"card-body\">\r\n            <h4 class=\"card-title\">{{taskCount}}</h4>\r\n            <p class=\"card-text\">Total Tasks</p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div class=\"col-md-3\">\r\n        <div class=\"card text-white bg-info mb-3\">\r\n          <div class=\"card-header\">Notifications</div>\r\n          <div class=\"card-body\">\r\n            <h4 class=\"card-title\">{{notificationCount}}</h4>\r\n            <p class=\"card-text\">Total Notifications</p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div class=\"col-md-3\">\r\n        <div class=\"card text-white bg-warning mb-3\">\r\n          <div class=\"card-header\">Status</div>\r\n          <div class=\"card-body\">\r\n            <h4 class=\"card-title\">Active</h4>\r\n            <p class=\"card-text\">All Services</p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    \r\n    <div class=\"row mt-4\">\r\n      <div class=\"col-md-12\">\r\n        <div class=\"card\">\r\n          <div class=\"card-header\">\r\n            <h5>Recent Tasks</h5>\r\n          </div>\r\n          <div class=\"card-body\">\r\n            <form class=\"row g-3 mb-4\" (ngSubmit)=\"createTask()\">\r\n              <div class=\"col-md-4\">\r\n                <label class=\"form-label\">Title</label>\r\n                <input class=\"form-control\" [(ngModel)]=\"newTask.title\" name=\"title\" required />\r\n              </div>\r\n              <div class=\"col-md-4\">\r\n                <label class=\"form-label\">Description</label>\r\n                <input class=\"form-control\" [(ngModel)]=\"newTask.description\" name=\"description\" />\r\n              </div>\r\n              <div class=\"col-md-2\">\r\n                <label class=\"form-label\">Priority</label>\r\n                <select class=\"form-select\" [(ngModel)]=\"newTask.priority\" name=\"priority\">\r\n                  <option value=\"LOW\">LOW</option>\r\n                  <option value=\"MEDIUM\">MEDIUM</option>\r\n                  <option value=\"HIGH\">HIGH</option>\r\n                  <option value=\"URGENT\">URGENT</option>\r\n                </select>\r\n              </div>\r\n              <div class=\"col-md-2\">\r\n                <label class=\"form-label\">User ID</label>\r\n                <input type=\"number\" class=\"form-control\" [(ngModel)]=\"newTask.userId\" name=\"userId\" required />\r\n              </div>\r\n              <div class=\"col-md-3\">\r\n                <label class=\"form-label\">Due Date</label>\r\n                <input type=\"datetime-local\" class=\"form-control\" [(ngModel)]=\"newTask.dueDate\" name=\"dueDate\" />\r\n              </div>\r\n              <div class=\"col-md-2 align-self-end\">\r\n                <button class=\"btn btn-primary w-100\" type=\"submit\" [disabled]=\"!newTask.title || !newTask.userId\">Add Task</button>\r\n              </div>\r\n              <div class=\"col-md-7 align-self-end text-success\" *ngIf=\"createSuccess\">Task created successfully.</div>\r\n              <div class=\"col-md-7 align-self-end text-danger\" *ngIf=\"createError\">Failed to create task.</div>\r\n            </form>\r\n            <div *ngIf=\"tasks.length === 0\" class=\"text-muted\">No tasks found</div>\r\n            <div *ngFor=\"let task of tasks\" class=\"mb-2 border-bottom pb-2\">\r\n              <div class=\"d-flex justify-content-between\">\r\n                <strong>{{task.title}}</strong>\r\n                <span class=\"badge\" [class]=\"'bg-' + getPriorityColor(task.priority)\">{{task.priority}}</span>\r\n              </div>\r\n              <small class=\"text-muted\">{{task.description}}</small>\r\n              <div class=\"mt-1\">\r\n                <small class=\"badge\" [class]=\"'bg-' + getStatusColor(task.status)\">{{task.status}}</small>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  `\r\n})\r\nexport class DashboardComponent implements OnInit {\r\n  userCount = 5;\r\n  taskCount = 12;\r\n  notificationCount = 8;\r\n  tasks: any[] = [];\r\n  newTask: any = { title: '', description: '', userId: 1, priority: 'MEDIUM', dueDate: '' };\r\n  createSuccess = false;\r\n  createError = false;\r\n\r\n  constructor(private taskService: TaskService) {}\r\n\r\n  ngOnInit() {\r\n    this.loadTasks();\r\n  }\r\n\r\n  loadTasks() {\r\n    this.taskService.getAllTasks().subscribe({\r\n      next: (tasks) => {\r\n        this.tasks = tasks;\r\n        this.taskCount = tasks.length;\r\n        this.userCount = new Set(tasks.map(t => t.userId)).size;\r\n      },\r\n      error: () => {\r\n        // fallback demo data if API down\r\n        this.tasks = [\r\n          { title: 'Sample Task 1', description: 'This is a sample task', priority: 'HIGH', status: 'IN_PROGRESS' },\r\n          { title: 'Sample Task 2', description: 'Another sample task', priority: 'MEDIUM', status: 'PENDING' }\r\n        ];\r\n      }\r\n    });\r\n  }\r\n\r\n  createTask() {\r\n    const payload: any = {\r\n      title: this.newTask.title,\r\n      description: this.newTask.description,\r\n      userId: Number(this.newTask.userId),\r\n      priority: this.newTask.priority,\r\n    };\r\n    if (this.newTask.dueDate) {\r\n      // Backend expects LocalDateTime (no timezone). Format as 'YYYY-MM-DDTHH:mm:ss'.\r\n      const d = new Date(this.newTask.dueDate);\r\n      const pad = (n: number) => String(n).padStart(2, '0');\r\n      payload.dueDate = `${d.getFullYear()}-${pad(d.getMonth() + 1)}-${pad(d.getDate())}` +\r\n        `T${pad(d.getHours())}:${pad(d.getMinutes())}:${pad(d.getSeconds())}`;\r\n    }\r\n\r\n    this.taskService.createTask(payload).subscribe({\r\n      next: () => {\r\n        this.createSuccess = true;\r\n        this.createError = false;\r\n        this.newTask = { title: '', description: '', userId: 1, priority: 'MEDIUM', dueDate: '' };\r\n        this.loadTasks();\r\n        setTimeout(() => (this.createSuccess = false), 2000);\r\n      },\r\n      error: () => {\r\n        this.createError = true;\r\n        setTimeout(() => (this.createError = false), 2500);\r\n      }\r\n    });\r\n  }\r\n\r\n  getPriorityColor(priority: string): string {\r\n    switch(priority) {\r\n      case 'HIGH': return 'danger';\r\n      case 'MEDIUM': return 'warning';\r\n      case 'LOW': return 'success';\r\n      case 'URGENT': return 'danger';\r\n      default: return 'secondary';\r\n    }\r\n  }\r\n\r\n  getStatusColor(status: string): string {\r\n    switch(status) {\r\n      case 'COMPLETED': return 'success';\r\n      case 'IN_PROGRESS': return 'primary';\r\n      case 'PENDING': return 'warning';\r\n      case 'CANCELLED': return 'danger';\r\n      default: return 'secondary';\r\n    }\r\n  }\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}