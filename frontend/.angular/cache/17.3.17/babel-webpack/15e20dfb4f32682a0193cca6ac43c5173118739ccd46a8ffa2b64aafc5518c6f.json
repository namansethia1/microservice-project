{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class TaskService {\n  constructor(http) {\n    this.http = http;\n    this.apiUrl = 'http://localhost:8082/api/tasks';\n  }\n  getAllTasks() {\n    return this.http.get(this.apiUrl);\n  }\n  getTaskById(id) {\n    return this.http.get(`${this.apiUrl}/${id}`);\n  }\n  getTasksByUserId(userId) {\n    return this.http.get(`${this.apiUrl}/user/${userId}`);\n  }\n  getTasksByAssignedTo(assignedTo) {\n    return this.http.get(`${this.apiUrl}/assigned/${assignedTo}`);\n  }\n  getTasksByStatus(status) {\n    return this.http.get(`${this.apiUrl}/status/${status}`);\n  }\n  getTasksByPriority(priority) {\n    return this.http.get(`${this.apiUrl}/priority/${priority}`);\n  }\n  getOverdueTasks() {\n    return this.http.get(`${this.apiUrl}/overdue`);\n  }\n  createTask(task) {\n    return this.http.post(this.apiUrl, task);\n  }\n  updateTask(id, task) {\n    return this.http.put(`${this.apiUrl}/${id}`, task);\n  }\n  deleteTask(id) {\n    return this.http.delete(`${this.apiUrl}/${id}`);\n  }\n  assignTask(taskId, assignedTo) {\n    return this.http.put(`${this.apiUrl}/${taskId}/assign/${assignedTo}`, {});\n  }\n  updateTaskStatus(taskId, status) {\n    return this.http.put(`${this.apiUrl}/${taskId}/status/${status}`, {});\n  }\n  static {\n    this.ɵfac = function TaskService_Factory(t) {\n      return new (t || TaskService)(i0.ɵɵinject(i1.HttpClient));\n    };\n  }\n  static {\n    this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: TaskService,\n      factory: TaskService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n}","map":{"version":3,"names":["TaskService","constructor","http","apiUrl","getAllTasks","get","getTaskById","id","getTasksByUserId","userId","getTasksByAssignedTo","assignedTo","getTasksByStatus","status","getTasksByPriority","priority","getOverdueTasks","createTask","task","post","updateTask","put","deleteTask","delete","assignTask","taskId","updateTaskStatus","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["D:\\CIA3_MS\\frontend\\src\\app\\services\\task.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\n\r\nexport interface Task {\r\n  id?: number;\r\n  title: string;\r\n  description?: string;\r\n  userId: number;\r\n  assignedTo?: number;\r\n  priority: 'LOW' | 'MEDIUM' | 'HIGH' | 'URGENT';\r\n  status: 'PENDING' | 'TODO' | 'IN_PROGRESS' | 'COMPLETED' | 'CANCELLED';\r\n  dueDate?: string;\r\n  createdAt?: string;\r\n  updatedAt?: string;\r\n  completedAt?: string;\r\n}\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class TaskService {\r\n  private apiUrl = 'http://localhost:8082/api/tasks';\r\n\r\n  constructor(private http: HttpClient) {}\r\n\r\n  getAllTasks(): Observable<Task[]> {\r\n    return this.http.get<Task[]>(this.apiUrl);\r\n  }\r\n\r\n  getTaskById(id: number): Observable<Task> {\r\n    return this.http.get<Task>(`${this.apiUrl}/${id}`);\r\n  }\r\n\r\n  getTasksByUserId(userId: number): Observable<Task[]> {\r\n    return this.http.get<Task[]>(`${this.apiUrl}/user/${userId}`);\r\n  }\r\n\r\n  getTasksByAssignedTo(assignedTo: number): Observable<Task[]> {\r\n    return this.http.get<Task[]>(`${this.apiUrl}/assigned/${assignedTo}`);\r\n  }\r\n\r\n  getTasksByStatus(status: string): Observable<Task[]> {\r\n    return this.http.get<Task[]>(`${this.apiUrl}/status/${status}`);\r\n  }\r\n\r\n  getTasksByPriority(priority: string): Observable<Task[]> {\r\n    return this.http.get<Task[]>(`${this.apiUrl}/priority/${priority}`);\r\n  }\r\n\r\n  getOverdueTasks(): Observable<Task[]> {\r\n    return this.http.get<Task[]>(`${this.apiUrl}/overdue`);\r\n  }\r\n\r\n  createTask(task: Task): Observable<Task> {\r\n    return this.http.post<Task>(this.apiUrl, task);\r\n  }\r\n\r\n  updateTask(id: number, task: Task): Observable<Task> {\r\n    return this.http.put<Task>(`${this.apiUrl}/${id}`, task);\r\n  }\r\n\r\n  deleteTask(id: number): Observable<void> {\r\n    return this.http.delete<void>(`${this.apiUrl}/${id}`);\r\n  }\r\n\r\n  assignTask(taskId: number, assignedTo: number): Observable<Task> {\r\n    return this.http.put<Task>(`${this.apiUrl}/${taskId}/assign/${assignedTo}`, {});\r\n  }\r\n\r\n  updateTaskStatus(taskId: number, status: string): Observable<Task> {\r\n    return this.http.put<Task>(`${this.apiUrl}/${taskId}/status/${status}`, {});\r\n  }\r\n}\r\n"],"mappings":";;AAqBA,OAAM,MAAOA,WAAW;EAGtBC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IAFhB,KAAAC,MAAM,GAAG,iCAAiC;EAEX;EAEvCC,WAAWA,CAAA;IACT,OAAO,IAAI,CAACF,IAAI,CAACG,GAAG,CAAS,IAAI,CAACF,MAAM,CAAC;EAC3C;EAEAG,WAAWA,CAACC,EAAU;IACpB,OAAO,IAAI,CAACL,IAAI,CAACG,GAAG,CAAO,GAAG,IAAI,CAACF,MAAM,IAAII,EAAE,EAAE,CAAC;EACpD;EAEAC,gBAAgBA,CAACC,MAAc;IAC7B,OAAO,IAAI,CAACP,IAAI,CAACG,GAAG,CAAS,GAAG,IAAI,CAACF,MAAM,SAASM,MAAM,EAAE,CAAC;EAC/D;EAEAC,oBAAoBA,CAACC,UAAkB;IACrC,OAAO,IAAI,CAACT,IAAI,CAACG,GAAG,CAAS,GAAG,IAAI,CAACF,MAAM,aAAaQ,UAAU,EAAE,CAAC;EACvE;EAEAC,gBAAgBA,CAACC,MAAc;IAC7B,OAAO,IAAI,CAACX,IAAI,CAACG,GAAG,CAAS,GAAG,IAAI,CAACF,MAAM,WAAWU,MAAM,EAAE,CAAC;EACjE;EAEAC,kBAAkBA,CAACC,QAAgB;IACjC,OAAO,IAAI,CAACb,IAAI,CAACG,GAAG,CAAS,GAAG,IAAI,CAACF,MAAM,aAAaY,QAAQ,EAAE,CAAC;EACrE;EAEAC,eAAeA,CAAA;IACb,OAAO,IAAI,CAACd,IAAI,CAACG,GAAG,CAAS,GAAG,IAAI,CAACF,MAAM,UAAU,CAAC;EACxD;EAEAc,UAAUA,CAACC,IAAU;IACnB,OAAO,IAAI,CAAChB,IAAI,CAACiB,IAAI,CAAO,IAAI,CAAChB,MAAM,EAAEe,IAAI,CAAC;EAChD;EAEAE,UAAUA,CAACb,EAAU,EAAEW,IAAU;IAC/B,OAAO,IAAI,CAAChB,IAAI,CAACmB,GAAG,CAAO,GAAG,IAAI,CAAClB,MAAM,IAAII,EAAE,EAAE,EAAEW,IAAI,CAAC;EAC1D;EAEAI,UAAUA,CAACf,EAAU;IACnB,OAAO,IAAI,CAACL,IAAI,CAACqB,MAAM,CAAO,GAAG,IAAI,CAACpB,MAAM,IAAII,EAAE,EAAE,CAAC;EACvD;EAEAiB,UAAUA,CAACC,MAAc,EAAEd,UAAkB;IAC3C,OAAO,IAAI,CAACT,IAAI,CAACmB,GAAG,CAAO,GAAG,IAAI,CAAClB,MAAM,IAAIsB,MAAM,WAAWd,UAAU,EAAE,EAAE,EAAE,CAAC;EACjF;EAEAe,gBAAgBA,CAACD,MAAc,EAAEZ,MAAc;IAC7C,OAAO,IAAI,CAACX,IAAI,CAACmB,GAAG,CAAO,GAAG,IAAI,CAAClB,MAAM,IAAIsB,MAAM,WAAWZ,MAAM,EAAE,EAAE,EAAE,CAAC;EAC7E;;;uBAnDWb,WAAW,EAAA2B,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;IAAA;EAAA;;;aAAX9B,WAAW;MAAA+B,OAAA,EAAX/B,WAAW,CAAAgC,IAAA;MAAAC,UAAA,EAFV;IAAM;EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}