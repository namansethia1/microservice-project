{"ast":null,"code":"import { CommonModule } from '@angular/common';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../../services/notification.service\";\nimport * as i2 from \"@angular/common\";\nfunction NavbarComponent_span_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 18);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate(ctx_r0.unreadCount);\n  }\n}\nfunction NavbarComponent_li_13_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"li\", 19)(1, \"div\", 20);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"div\", 21);\n    i0.ɵɵtext(4);\n    i0.ɵɵpipe(5, \"date\");\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const notification_r2 = ctx.$implicit;\n    i0.ɵɵclassProp(\"notification-unread\", !notification_r2.isRead);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(notification_r2.message);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind2(5, 4, notification_r2.createdAt, \"short\"));\n  }\n}\nexport class NavbarComponent {\n  constructor(notificationService) {\n    this.notificationService = notificationService;\n    this.unreadCount = 0;\n    this.recentNotifications = [];\n    this.currentUser = {\n      firstName: 'John',\n      lastName: 'Doe'\n    }; // Mock user\n  }\n  ngOnInit() {\n    this.loadNotifications();\n  }\n  loadNotifications() {\n    // Mock user ID - in real app, get from auth service\n    const userId = 1;\n    this.notificationService.getUnreadCount(userId).subscribe(count => this.unreadCount = count);\n    this.notificationService.getNotificationsByUserId(userId).subscribe(notifications => this.recentNotifications = notifications.slice(0, 5));\n  }\n  logout() {\n    // Implement logout logic\n    console.log('Logout clicked');\n  }\n  static {\n    this.ɵfac = function NavbarComponent_Factory(t) {\n      return new (t || NavbarComponent)(i0.ɵɵdirectiveInject(i1.NotificationService));\n    };\n  }\n  static {\n    this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: NavbarComponent,\n      selectors: [[\"app-navbar\"]],\n      standalone: true,\n      features: [i0.ɵɵStandaloneFeature],\n      decls: 34,\n      vars: 3,\n      consts: [[1, \"navbar\", \"navbar-expand-lg\", \"navbar-dark\", \"bg-dark\"], [1, \"container-fluid\"], [\"href\", \"#\", 1, \"navbar-brand\"], [1, \"navbar-nav\", \"ms-auto\"], [1, \"nav-item\", \"dropdown\"], [\"href\", \"#\", \"id\", \"notificationDropdown\", \"role\", \"button\", \"data-bs-toggle\", \"dropdown\", \"aria-expanded\", \"false\", 1, \"nav-link\", \"dropdown-toggle\", \"position-relative\"], [1, \"fas\", \"fa-bell\"], [\"class\", \"notification-badge\", 4, \"ngIf\"], [\"aria-labelledby\", \"notificationDropdown\", 1, \"dropdown-menu\", \"dropdown-menu-end\"], [1, \"dropdown-header\"], [\"class\", \"notification-item\", 3, \"notification-unread\", 4, \"ngFor\", \"ngForOf\"], [1, \"dropdown-divider\"], [\"href\", \"#/notifications\", 1, \"dropdown-item\", \"text-center\"], [\"href\", \"#\", \"id\", \"userDropdown\", \"role\", \"button\", \"data-bs-toggle\", \"dropdown\", \"aria-expanded\", \"false\", 1, \"nav-link\", \"dropdown-toggle\"], [\"aria-labelledby\", \"userDropdown\", 1, \"dropdown-menu\", \"dropdown-menu-end\"], [\"href\", \"#/profile\", 1, \"dropdown-item\"], [\"href\", \"#/settings\", 1, \"dropdown-item\"], [\"href\", \"#\", 1, \"dropdown-item\", 3, \"click\"], [1, \"notification-badge\"], [1, \"notification-item\"], [1, \"small\"], [1, \"text-muted\", \"small\"]],\n      template: function NavbarComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"nav\", 0)(1, \"div\", 1)(2, \"a\", 2);\n          i0.ɵɵtext(3, \"Task Notification System\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(4, \"div\", 3)(5, \"div\", 4)(6, \"a\", 5);\n          i0.ɵɵelement(7, \"i\", 6);\n          i0.ɵɵtemplate(8, NavbarComponent_span_8_Template, 2, 1, \"span\", 7);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(9, \"ul\", 8)(10, \"li\")(11, \"h6\", 9);\n          i0.ɵɵtext(12, \"Notifications\");\n          i0.ɵɵelementEnd()();\n          i0.ɵɵtemplate(13, NavbarComponent_li_13_Template, 6, 7, \"li\", 10);\n          i0.ɵɵelementStart(14, \"li\");\n          i0.ɵɵelement(15, \"hr\", 11);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(16, \"li\")(17, \"a\", 12);\n          i0.ɵɵtext(18, \"View All\");\n          i0.ɵɵelementEnd()()()();\n          i0.ɵɵelementStart(19, \"div\", 4)(20, \"a\", 13);\n          i0.ɵɵtext(21);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(22, \"ul\", 14)(23, \"li\")(24, \"a\", 15);\n          i0.ɵɵtext(25, \"Profile\");\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(26, \"li\")(27, \"a\", 16);\n          i0.ɵɵtext(28, \"Settings\");\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(29, \"li\");\n          i0.ɵɵelement(30, \"hr\", 11);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(31, \"li\")(32, \"a\", 17);\n          i0.ɵɵlistener(\"click\", function NavbarComponent_Template_a_click_32_listener() {\n            return ctx.logout();\n          });\n          i0.ɵɵtext(33, \"Logout\");\n          i0.ɵɵelementEnd()()()()()()();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(8);\n          i0.ɵɵproperty(\"ngIf\", ctx.unreadCount > 0);\n          i0.ɵɵadvance(5);\n          i0.ɵɵproperty(\"ngForOf\", ctx.recentNotifications);\n          i0.ɵɵadvance(8);\n          i0.ɵɵtextInterpolate1(\" \", (ctx.currentUser == null ? null : ctx.currentUser.firstName) || \"User\", \" \");\n        }\n      },\n      dependencies: [CommonModule, i2.NgForOf, i2.NgIf, i2.DatePipe],\n      styles: [\"\\n\\n.notification-badge[_ngcontent-%COMP%] {\\n  position: absolute;\\n  top: -5px;\\n  right: -5px;\\n  font-size: 0.75rem;\\n}\\n\\n.notification-item[_ngcontent-%COMP%] {\\n  max-width: 300px;\\n  white-space: normal;\\n}\\n\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvY29tcG9uZW50cy9uYXZiYXIvbmF2YmFyLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsNEJBQTRCO0FBQzVCO0VBQ0Usa0JBQWtCO0VBQ2xCLFNBQVM7RUFDVCxXQUFXO0VBQ1gsa0JBQWtCO0FBQ3BCOztBQUVBO0VBQ0UsZ0JBQWdCO0VBQ2hCLG1CQUFtQjtBQUNyQiIsInNvdXJjZXNDb250ZW50IjpbIi8qIE5hdmJhciBDb21wb25lbnQgU3R5bGVzICovXHJcbi5ub3RpZmljYXRpb24tYmFkZ2Uge1xyXG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICB0b3A6IC01cHg7XHJcbiAgcmlnaHQ6IC01cHg7XHJcbiAgZm9udC1zaXplOiAwLjc1cmVtO1xyXG59XHJcblxyXG4ubm90aWZpY2F0aW9uLWl0ZW0ge1xyXG4gIG1heC13aWR0aDogMzAwcHg7XHJcbiAgd2hpdGUtc3BhY2U6IG5vcm1hbDtcclxufVxyXG4iXSwic291cmNlUm9vdCI6IiJ9 */\"]\n    });\n  }\n}","map":{"version":3,"names":["CommonModule","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵtextInterpolate","ctx_r0","unreadCount","ɵɵclassProp","notification_r2","isRead","message","ɵɵpipeBind2","createdAt","NavbarComponent","constructor","notificationService","recentNotifications","currentUser","firstName","lastName","ngOnInit","loadNotifications","userId","getUnreadCount","subscribe","count","getNotificationsByUserId","notifications","slice","logout","console","log","ɵɵdirectiveInject","i1","NotificationService","selectors","standalone","features","ɵɵStandaloneFeature","decls","vars","consts","template","NavbarComponent_Template","rf","ctx","ɵɵelement","ɵɵtemplate","NavbarComponent_span_8_Template","NavbarComponent_li_13_Template","ɵɵlistener","NavbarComponent_Template_a_click_32_listener","ɵɵproperty","ɵɵtextInterpolate1","i2","NgForOf","NgIf","DatePipe","styles"],"sources":["D:\\CIA3_MS\\frontend\\src\\app\\components\\navbar\\navbar.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { NotificationService } from '../../services/notification.service';\r\n\r\n@Component({\r\n  selector: 'app-navbar',\r\n  standalone: true,\r\n  imports: [CommonModule],\r\n  template: `\r\n    <nav class=\"navbar navbar-expand-lg navbar-dark bg-dark\">\r\n      <div class=\"container-fluid\">\r\n        <a class=\"navbar-brand\" href=\"#\">Task Notification System</a>\r\n        \r\n        <div class=\"navbar-nav ms-auto\">\r\n          <div class=\"nav-item dropdown\">\r\n            <a class=\"nav-link dropdown-toggle position-relative\" href=\"#\" id=\"notificationDropdown\" \r\n               role=\"button\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\">\r\n              <i class=\"fas fa-bell\"></i>\r\n              <span *ngIf=\"unreadCount > 0\" class=\"notification-badge\">{{unreadCount}}</span>\r\n            </a>\r\n            <ul class=\"dropdown-menu dropdown-menu-end\" aria-labelledby=\"notificationDropdown\">\r\n              <li><h6 class=\"dropdown-header\">Notifications</h6></li>\r\n              <li *ngFor=\"let notification of recentNotifications\" \r\n                  class=\"notification-item\" \r\n                  [class.notification-unread]=\"!notification.isRead\">\r\n                <div class=\"small\">{{notification.message}}</div>\r\n                <div class=\"text-muted small\">{{notification.createdAt | date:'short'}}</div>\r\n              </li>\r\n              <li><hr class=\"dropdown-divider\"></li>\r\n              <li><a class=\"dropdown-item text-center\" href=\"#/notifications\">View All</a></li>\r\n            </ul>\r\n          </div>\r\n          \r\n          <div class=\"nav-item dropdown\">\r\n            <a class=\"nav-link dropdown-toggle\" href=\"#\" id=\"userDropdown\" \r\n               role=\"button\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\">\r\n              {{currentUser?.firstName || 'User'}}\r\n            </a>\r\n            <ul class=\"dropdown-menu dropdown-menu-end\" aria-labelledby=\"userDropdown\">\r\n              <li><a class=\"dropdown-item\" href=\"#/profile\">Profile</a></li>\r\n              <li><a class=\"dropdown-item\" href=\"#/settings\">Settings</a></li>\r\n              <li><hr class=\"dropdown-divider\"></li>\r\n              <li><a class=\"dropdown-item\" href=\"#\" (click)=\"logout()\">Logout</a></li>\r\n            </ul>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  `,\r\n  styleUrls: ['./navbar.component.css']\r\n})\r\nexport class NavbarComponent implements OnInit {\r\n  unreadCount = 0;\r\n  recentNotifications: any[] = [];\r\n  currentUser: any = { firstName: 'John', lastName: 'Doe' }; // Mock user\r\n\r\n  constructor(private notificationService: NotificationService) {}\r\n\r\n  ngOnInit() {\r\n    this.loadNotifications();\r\n  }\r\n\r\n  loadNotifications() {\r\n    // Mock user ID - in real app, get from auth service\r\n    const userId = 1;\r\n    \r\n    this.notificationService.getUnreadCount(userId).subscribe(\r\n      count => this.unreadCount = count\r\n    );\r\n\r\n    this.notificationService.getNotificationsByUserId(userId).subscribe(\r\n      notifications => this.recentNotifications = notifications.slice(0, 5)\r\n    );\r\n  }\r\n\r\n  logout() {\r\n    // Implement logout logic\r\n    console.log('Logout clicked');\r\n  }\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}