{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport let NotificationService = /*#__PURE__*/(() => {\n  class NotificationService {\n    constructor(http) {\n      this.http = http;\n      this.apiUrl = 'http://localhost:8083/api/notifications';\n    }\n    getAllNotifications() {\n      return this.http.get(this.apiUrl);\n    }\n    getNotificationById(id) {\n      return this.http.get(`${this.apiUrl}/${id}`);\n    }\n    getNotificationsByUserId(userId) {\n      return this.http.get(`${this.apiUrl}/user/${userId}`);\n    }\n    getUnreadNotificationsByUserId(userId) {\n      return this.http.get(`${this.apiUrl}/user/${userId}/unread`);\n    }\n    getReadNotificationsByUserId(userId) {\n      return this.http.get(`${this.apiUrl}/user/${userId}/read`);\n    }\n    getUnreadCount(userId) {\n      return this.http.get(`${this.apiUrl}/user/${userId}/count/unread`);\n    }\n    createNotification(notification) {\n      return this.http.post(this.apiUrl, notification);\n    }\n    markAsRead(id) {\n      return this.http.put(`${this.apiUrl}/${id}/read`, {});\n    }\n    markAllAsRead(userId) {\n      return this.http.put(`${this.apiUrl}/user/${userId}/read-all`, {});\n    }\n    deleteNotification(id) {\n      return this.http.delete(`${this.apiUrl}/${id}`);\n    }\n    deleteAllUserNotifications(userId) {\n      return this.http.delete(`${this.apiUrl}/user/${userId}`);\n    }\n    static {\n      this.ɵfac = function NotificationService_Factory(t) {\n        return new (t || NotificationService)(i0.ɵɵinject(i1.HttpClient));\n      };\n    }\n    static {\n      this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n        token: NotificationService,\n        factory: NotificationService.ɵfac,\n        providedIn: 'root'\n      });\n    }\n  }\n  return NotificationService;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}